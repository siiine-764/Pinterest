[{"/goinfre/mayache-/Pinterest/UI/src/index.js":"1","/goinfre/mayache-/Pinterest/UI/src/App.js":"2","/goinfre/mayache-/Pinterest/UI/src/reportWebVitals.js":"3","/goinfre/mayache-/Pinterest/UI/src/components/MenuContainer.js":"4","/goinfre/mayache-/Pinterest/UI/src/components/Data.js":"5","/goinfre/mayache-/Pinterest/UI/src/components/Pin.js":"6"},{"size":535,"mtime":1705684211697,"results":"7","hashOfConfig":"8"},{"size":2551,"mtime":1705688975277,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1705684211697,"results":"10","hashOfConfig":"8"},{"size":162,"mtime":1705684211696,"results":"11","hashOfConfig":"8"},{"size":6204,"mtime":1705684211696,"results":"12","hashOfConfig":"8"},{"size":609,"mtime":1705684211697,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1i03hfc",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"/goinfre/mayache-/Pinterest/UI/src/index.js",[],[],[],"/goinfre/mayache-/Pinterest/UI/src/App.js",["34"],[],"\nimport { Add, Chat, FavoriteRounded, Notifications, Person, QuestionMark } from '@mui/icons-material';\nimport Pin from './components/Pin';\nimport './App.css';\nimport MenuContainer from './components/MenuContainer';\nimport Data from \"./components/Data\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n\n  const [images, setImages] = useState([]);\n\n  useEffect(() => {\n    // Fetch image URLs from your backend API\n    axios.get('/api/images')\n      .then(response => setImages(response.data))\n      .catch(error => console.error('Error fetching images:', error));\n  }, []);\n\n\n//   useEffect(() =>{\n//     const allIcon = document.querySelectorAll(\".iconContainer\");\n    \n//     function setMenuActive(){\n//       allIcon.forEach((n) => n.classList.remove(\"active\"));\n//       this.classList.add(\"active\");\n//     }\n//     allIcon.forEach((n)=> n.addEventListener(\"click\",setMenuActive));\n \n// }, []);\n  return (\n    <div className=\"App\">\n      <div className=\"menuContainer\">\n      <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRoEjYfBnTQ5_GXIDZlOvqD_hirQ2o2GW30UrXODXNh&s\" alt=\"logo\" className='logo'></img>\n      \n\n      <div className=\"subMenu\">\n        <div>\n        <MenuContainer icon={<Person/>}/>\n        <MenuContainer icon={<Notifications/>}/>\n        <MenuContainer icon={<Chat/>}/> \n        </div>\n\n        <div>\n        <MenuContainer icon={<FavoriteRounded/>}/>\n        \n        </div>\n\n        <div>\n        <MenuContainer icon={<QuestionMark/>}/>\n        <MenuContainer icon={<Add/>}/>\n         \n        </div>\n        </div>\n      </div>\n      \n      <main>\n        <div className=\"searchBox\">\n          <input type=\"text\" placeholder=\"Search..\"/>\n          <div className=\"search\">\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSKIZUMg9MvWTk2HyVE8FJMtIcJAcNZNoZRP3kvag2yW4qHOxMvo51vmgMbQY6j2JB12Ug&usqp=CAU\" alt=\"rightArrow\" className=\"searchArrow\"></img>\n          </div>\n        </div>\n        <div className=\"mainContainer\">\n\n          {\n            Data && Data.map((data) => <Pin \n            key={data.id} \n            pinSize ={data.size} \n            imgSrc={data.imgSrc} \n            name={data.name} \n            link={data.link} />)}\n          \n        </div>\n      </main>\n        <div>\n      <h1>Images from MongoDB</h1>\n      <div>\n        {images.map(image => (\n          <img key={image._id} src={image.imageUrl} alt={`Image ${image._id}`} />\n        ))}\n      </div>\n    </div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","/goinfre/mayache-/Pinterest/UI/src/reportWebVitals.js",[],[],"/goinfre/mayache-/Pinterest/UI/src/components/MenuContainer.js",[],[],"/goinfre/mayache-/Pinterest/UI/src/components/Data.js",[],[],"/goinfre/mayache-/Pinterest/UI/src/components/Pin.js",[],[],{"ruleId":"35","severity":1,"message":"36","line":81,"column":11,"nodeType":"37","endLine":81,"endColumn":82},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]